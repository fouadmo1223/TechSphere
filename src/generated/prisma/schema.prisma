// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  username  String    @db.VarChar(40)
  password  String
  image     String    @default("") // Added image field with empty string as default
  isAdmin   Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  articles  Article[]
  comments  Comment[]
}

model Article {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  body      String    @db.VarChar(200)
  title     String    @db.VarChar(40)
  creator   User      @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  creatorId Int
  comments  Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  body      String   @db.VarChar(200)
  article   Article  @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId Int
  creator   User     @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  creatorId Int
}
